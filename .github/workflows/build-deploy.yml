# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy Expency Application

on:
  push:
    branches: [ "feature/g-#33-ci-cd-workflow" ]
  pull_request:
    branches: [ "feature/g-#33-ci-cd-workflow" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - run: npm ci
      working-directory: ./expensy_backend
    - run: npm run build --if-present
      working-directory: ./expensy_backend
    - run: npm test
      working-directory: ./expensy_backend
    - run: npm ci
      working-directory: ./expensy_frontend
    - run: npm run build --if-present
      working-directory: ./expensy_frontend
    - run: npm test
      working-directory: ./expensy_frontend

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GYANESH_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.GYANESH_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name room2-new --region eu-north-1  
    
    - name: Set kubectl context
      run: |
        kubectl config use-context arn:aws:eks:eu-north-1:851725332718:cluster/room2-new

    - name: Build and Push Backend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/expensy-backend:latest ./expensy_backend
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/expensy-backend:latest

    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/expensy-frontend:latest ./expensy_frontend
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/expensy-frontend:latest

    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -f k8s/1-ebs-storageclass.yml
        kubectl apply -f k8s/2-mongo-pvc.yml
        kubectl apply -f k8s/3-mongo-services.yml
        kubectl apply -f k8s/4-mongo-deployment.yml
        kubectl apply -f k8s/5-redis-deployment.yml
        kubectl apply -f k8s/6-configmap.yml
        kubectl apply -f k8s/7-backend-deployment.yml
        kubectl apply -f k8s/8-frontend-deployment.yml
        kubectl apply -f k8s/9-hpa.yml
